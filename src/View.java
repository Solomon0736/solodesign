import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import java.util.ArrayList;

public class View {
    private JButton val1;
    private JButton val2;
    private JPanel tabel;
    String password = "password";
    private JTextField textField;
    int currentRoom = 1;

    public View() {
        JFrame frame = new JFrame("Main");
        frame.setContentPane(this.tabel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setSize(400, 300);
        frame.setVisible(true);
        try {


            Connection conn = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/exempel? " +
                            "allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC",
                    "solomon", password);
            Statement stmt = conn.createStatement();
            String SQLQuery = "select body from story where id = " + currentRoom;

            ResultSet rset = stmt.executeQuery(SQLQuery);
            while (rset.next()) {
                String body = rset.getString("body");
                textField.setText(textField.getText() + "\n\n" + body);

            }

            conn.close();
            stmt.close();
        } catch (SQLException e) {
            e.printStackTrace();

        }

        // Close conn and stmt


        textField.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent actionEvent) {
            }
        });
        /**
         * Jag har skapat två click knappar som kommer vara alternativena för projektet
         */


        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/exempel? " +
                    "allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC", "solomon", password);
            Statement stmt = conn.createStatement();
            String strSelect = "select description, story_id,target_id from links where story_id = " + currentRoom;

            ResultSet next = stmt.executeQuery(strSelect);
            ArrayList<Integer> storyLinks = new ArrayList();
            while (next.next()) {
                String description = next.getString("description");
                int target_id = next.getInt("target_id");

                if (target_id == 7) {
                    System.out.println("prova igen");
                    storyLinks.add(target_id);
                    val1.setText(val1.getText() + "\n\n" + description);

                    val2.setText(val2.getText() + "\n\n" + description);

                }
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        val1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
            }
        });
        val2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {

            }
        });


    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        tabel = new JPanel();
        tabel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        tabel.setBackground(new Color(-3023298));
        val1 = new JButton();
        val1.setText("");
        tabel.add(val1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        val2 = new JButton();
        val2.setText("");
        tabel.add(val2, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField = new JTextField();
        tabel.add(textField, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 1, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return tabel;
    }

}